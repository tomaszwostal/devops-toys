apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: grafana-loki
  namespace: argocd
spec:
  generators:
  - list:
      elements:
      - cluster: local
        url: https://kubernetes.default.svc
  template:
    metadata:
      name: '{{cluster}}-grafana-loki'
    spec:
      project: monitoring
      destination:
        namespace: loki
        server: '{{url}}'
      source:
        repoURL: https://grafana.github.io/helm-charts
        chart: loki
        targetRevision: 6.*.*
        helm:
          releaseName: grafana-loki
          values: |-
            nameOverride: "grafana-loki"
            fullnameOverride: "grafana-loki"
            deploymentMode: Distributed
            loki:
              auth_enabled: false
              limits_config:
                volume_enabled: true
                allow_structured_metadata: false
              storage:
                bucketNames:
                  chunks: loki
                  ruler: loki
                  admin: loki
                type: s3
                s3:
                  endpoint: http://minio.minio.svc.cluster.local:9000/loki
                  insecure: true
                  accessKeyId: ${accesskey}
                  secretAccessKey: ${secretkey}
                  s3ForcePathStyle: true
              schemaConfig:
                configs:
                - from: "2020-12-11"
                  index:
                    period: 24h
                    prefix: index_
                  object_store: s3
                  schema: v11
                  store: boltdb-shipper
                - from: "2024-06-01"
                  index:
                    period: 24h
                    prefix: loki_index_
                  object_store: s3
                  schema: v13
                  store: tsdb
              pattern_ingester:
                enabled: true
            test:
              enabled: false
            lokiCanary:
              enabled: false
            serviceAccount:
              name: loki
            gateway:
              basicAuth:
                enabled: true
                existingSecret: loki-gateway-auth
              ingress:
                enabled: true
                ingressClassName: nginx
                annotations:
                  cert-manager.io/cluster-issuer: devops-local
                hosts:
                  - host: loki.devops.local
                    paths:
                      - path: /
                        pathType: ImplementationSpecific
                tls:
                  - secretName: loki-gateway-tls
                    hosts:
                      - loki.devops.local
            write:
              replicas: 0
            read:
              replicas: 0
            backend:
              replicas: 0
            ingester:
              replicas: 1
              extraArgs:  
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
                claims:
                  - name: data
                    size: 2Gi
                  - name: wal
                    size: 2Gi
            distributor:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
            querier:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
            queryFrontend:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
            queryScheduler:
              replicas: 2
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
            indexGateway:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
            compactor:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enable: true
            bloomGateway:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
            bloomCompactor:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
                claims:
                  - name: data
                    size: 2Gi
                  - name: wal
                    size: 2Gi
            patternIngester:
              replicas: 1
              extraArgs:
                - "-config.expand-env=true"
              extraEnvFrom:
                - secretRef:
                    name: minio-creds
              persistence:
                enabled: true
            ruler:
              enabled: false
            monitoring:
              dashboards:
                enabled: true
              serviceMonitor:
                enabled: true
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
          allowEmpty: false
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=false

